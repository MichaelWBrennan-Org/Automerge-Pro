name: 'Marketing Automation'

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      campaign_type:
        description: 'Marketing Campaign Type'
        required: true
        type: choice
        options:
          - social-media
          - email-campaign
          - case-study
          - blog-post
          - release-notes
      platform:
        description: 'Social Media Platform (if applicable)'
        required: false
        type: choice
        options:
          - all
          - linkedin
          - twitter
          - mastodon
          - dev-to
  
  repository_dispatch:
    types: [deployment_success, milestone_reached, case_study_request]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
  TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
  TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
  TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
  TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
  MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
  MASTODON_SERVER_URL: ${{ secrets.MASTODON_SERVER_URL }}
  MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
  MAILCHIMP_LIST_ID: ${{ secrets.MAILCHIMP_LIST_ID }}
  DEV_TO_API_KEY: ${{ secrets.DEV_TO_API_KEY }}

jobs:
  generate-content:
    name: 'Generate Marketing Content'
    runs-on: ubuntu-latest
    outputs:
      content-generated: ${{ steps.generate.outputs.content-generated }}
      social-posts: ${{ steps.generate.outputs.social-posts }}
      email-content: ${{ steps.generate.outputs.email-content }}
      blog-content: ${{ steps.generate.outputs.blog-content }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Generate Content with AI
        id: generate
        run: |
          node scripts/marketing/generate-content.js \
            --type="${{ github.event.inputs.campaign_type || 'social-media' }}" \
            --platform="${{ github.event.inputs.platform || 'all' }}" \
            --event-type="${{ github.event.action }}"
        env:
          NODE_ENV: production
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
      - name: Save Generated Content
        run: |
          mkdir -p marketing-output
          echo '${{ steps.generate.outputs.social-posts }}' > marketing-output/social-posts.json
          echo '${{ steps.generate.outputs.email-content }}' > marketing-output/email-content.json
          echo '${{ steps.generate.outputs.blog-content }}' > marketing-output/blog-content.json
      
      - name: Upload Marketing Content
        uses: actions/upload-artifact@v3
        with:
          name: marketing-content
          path: marketing-output/
          retention-days: 7
  publish-social-media:
    name: 'Publish Social Media Content'
    runs-on: ubuntu-latest
    needs: generate-content
    if: needs.generate-content.outputs.content-generated == 'true' && (github.event.inputs.campaign_type == 'social-media' || github.event.schedule)
    
    strategy:
      matrix:
        platform: [linkedin, twitter, mastodon, dev-to]
        exclude:
          - platform: ${{ github.event.inputs.platform != 'all' && github.event.inputs.platform != matrix.platform && 'excluded' || 'included' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Download Marketing Content
        uses: actions/download-artifact@v3
        with:
          name: marketing-content
          path: marketing-output/
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Publish to LinkedIn
        if: matrix.platform == 'linkedin'
        run: |
          node scripts/marketing/publish-linkedin.js \
            --content-file="marketing-output/social-posts.json"
        env:
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
      
      - name: Publish to Twitter/X
        if: matrix.platform == 'twitter'
        run: |
          node scripts/marketing/publish-twitter.js \
            --content-file="marketing-output/social-posts.json"
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
      
      - name: Publish to Mastodon
        if: matrix.platform == 'mastodon'
        run: |
          node scripts/marketing/publish-mastodon.js \
            --content-file="marketing-output/social-posts.json"
        env:
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_SERVER_URL: ${{ secrets.MASTODON_SERVER_URL }}
      
      - name: Publish to Dev.to
        if: matrix.platform == 'dev-to'
        run: |
          node scripts/marketing/publish-devto.js \
            --content-file="marketing-output/blog-content.json"
        env:
          DEV_TO_API_KEY: ${{ secrets.DEV_TO_API_KEY }}

  analyze-marketing-performance:
    name: 'Analyze Marketing Performance'
    runs-on: ubuntu-latest
    needs: [publish-social-media]
    if: always() && needs.publish-social-media.result == 'success'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Collect Marketing Analytics
        run: |
          node scripts/marketing/collect-analytics.js \
            --timeframe="7d" \
            --output-file="marketing-analytics.json"
        env:
          GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
          LINKEDIN_ANALYTICS_TOKEN: ${{ secrets.LINKEDIN_ANALYTICS_TOKEN }}
          TWITTER_ANALYTICS_KEY: ${{ secrets.TWITTER_ANALYTICS_KEY }}
      
      - name: Generate Performance Report
        run: |
          node scripts/marketing/generate-performance-report.js \
            --analytics-file="marketing-analytics.json" \
            --output-format="json,pdf"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}